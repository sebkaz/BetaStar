# nodes and edges
graph:
  type: pandas.ParquetDataset
  filepath: data/01_raw/edges/edge_grid.parquet

data:
  type: pandas.ParquetDataset
  filepath: data/01_raw/data/grid.parquet

#preprocessed graph - start from 0
graph_pre:
  type: pandas.ParquetDataset
  filepath: data/02_graphs/grid_pre.parquet

# for struct2vec you need in and out columns without header and with space as separator
graph_struct:
  type: pandas.CSVDataset
  filepath: struc2vec/graph/beta/grid.csv
  save_args:
    sep: ' '
    header: False
    index: False

# node2vec embedding data 
embedded_graph_node2vec:
  type: pandas.ParquetDataset
  filepath: data/03_embeddings/grid_node2vec_embedding.parquet

# # struc2vec embedding data
embedded_graph_struc2vec:
  type: pandas.CSVDataset
  filepath: struc2vec/emb/grid.emb
  load_args:
    engine: python
    sep: ' '
    skiprows: 1
# # after preprocessing data for models
model_data:
  type: pandas.ParquetDataset
  filepath: data/04_models/grid_model.parquet

# ############# TASK 1 ########################

X_train_linear:
  type: pandas.ParquetDataset
  filepath: data/04_models/grid_X_train_task1.parquet

X_test_linear:
  type: pandas.ParquetDataset
  filepath: data/04_models/grid_X_test_task1.parquet

task1_predictions:
  type: pickle.PickleDataset
  filepath: data/04_models/grid_task1_predictions.pickle

task1_results:
  type: pandas.ParquetDataset
  filepath: data/05_reporting/grid_task1.parquet

# ############# TASK 2 ########################

# # train test for classification models
X_train:
  type: pandas.ParquetDataset
  filepath: data/04_models/grid_X_train.parquet

y_train: 
  type: pandas.ParquetDataset
  filepath: data/04_models/grid_y_train.parquet

X_test:
  type: pandas.ParquetDataset
  filepath: data/04_models/grid_X_test.parquet

y_test:
  type: pandas.ParquetDataset
  filepath: data/04_models/grid_y_test.parquet

# # models for each features set and for (sum of) embeddings
task2_models:
  type: pickle.PickleDataset
  filepath: data/04_models/grid_task2_models.pickle

# # metrics from classification models for all features
task2_results:
  type: pandas.ParquetDataset
  filepath: data/05_reporting/grid_task2.parquet

# ############ TASK 3 #########################

# random forest feature importance for all features
forest_FI:
  type: pickle.PickleDataset
  filepath: data/04_models/grid_forest_FI.pickle

# results for permutation importance for all features
models_results_pi:
  type: pandas.ParquetDataset
  filepath: data/05_reporting/grid_task3.parquet
